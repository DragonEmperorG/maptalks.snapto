/*!
 * maptalks.snapto v0.1.4
 * LICENSE : MIT
 * (c) 2016-2017 maptalks.org
 */
/*!
 * requires maptalks@^0.16.0 
 */
!function(e,t){"object"==typeof exports&&"undefined"!=typeof module?t(exports,require("maptalks")):"function"==typeof define&&define.amd?define(["exports","maptalks"],t):t(e.maptalks=e.maptalks||{},e.maptalks)}(this,function(e,t){"use strict";function r(e,t,o){var n,i,a,s,u,h,c,l,f,p,m=0,d=0,y="FeatureCollection"===e.type,g="Feature"===e.type,v=y?e.features.length:1;for(n=0;n<v;n++)for(f=y?e.features[n].geometry:g?e.geometry:e,p="GeometryCollection"===f.type,c=p?f.geometries.length:1,s=0;s<c;s++)if(h=p?f.geometries[s]:f,l=h.coordinates,m=!o||"Polygon"!==h.type&&"MultiPolygon"!==h.type?0:1,"Point"===h.type)t(l,d),d++;else if("LineString"===h.type||"MultiPoint"===h.type)for(i=0;i<l.length;i++)t(l[i],d),d++;else if("Polygon"===h.type||"MultiLineString"===h.type)for(i=0;i<l.length;i++)for(a=0;a<l[i].length-m;a++)t(l[i][a],d),d++;else if("MultiPolygon"===h.type)for(i=0;i<l.length;i++)for(a=0;a<l[i].length;a++)for(u=0;u<l[i][a].length-m;u++)t(l[i][a][u],d),d++;else{if("GeometryCollection"!==h.type)throw new Error("Unknown Geometry Type");for(i=0;i<h.geometries.length;i++)r(h.geometries[i],t,o)}}function o(e,t,o,n){var i=o;return r(e,function(e,r){i=0===r&&void 0===o?e:t(i,e,r)},n),i}function n(e,t){var r;switch(e.type){case"FeatureCollection":for(r=0;r<e.features.length;r++)t(e.features[r].properties,r);break;case"Feature":t(e.properties,0)}}function i(e,t,r){var o=r;return n(e,function(e,n){o=0===n&&void 0===r?e:t(o,e,n)}),o}function a(e,t){if("Feature"===e.type)t(e,0);else if("FeatureCollection"===e.type)for(var r=0;r<e.features.length;r++)t(e.features[r],r)}function s(e,t,r){var o=r;return a(e,function(e,n){o=0===n&&void 0===r?e:t(o,e,n)}),o}function u(e){var t=[];return r(e,function(e){t.push(e)}),t}function h(e,t){var r,o,n,i,a,s,u,h=0,c="FeatureCollection"===e.type,l="Feature"===e.type,f=c?e.features.length:1;for(r=0;r<f;r++)for(s=c?e.features[r].geometry:l?e.geometry:e,u="GeometryCollection"===s.type,a=u?s.geometries.length:1,n=0;n<a;n++)if(i=u?s.geometries[n]:s,"Point"===i.type||"LineString"===i.type||"MultiPoint"===i.type||"Polygon"===i.type||"MultiLineString"===i.type||"MultiPolygon"===i.type)t(i,h),h++;else{if("GeometryCollection"!==i.type)throw new Error("Unknown Geometry Type");for(o=0;o<i.geometries.length;o++)t(i.geometries[o],h),h++}}function c(e,t,r){var o=r;return h(e,function(e,n){o=0===n&&void 0===r?e:t(o,e,n)}),o}function l(e,t){if(!e)throw new Error("No geometry passed");return{type:"Feature",properties:t||{},geometry:e}}function f(e,t,r){var o,n,i,a,s,u,h,c,l,p,m=0,d=0,y="FeatureCollection"===e.type,g="Feature"===e.type,v=y?e.features.length:1;for(o=0;o<v;o++)for(l=y?e.features[o].geometry:g?e.geometry:e,p="GeometryCollection"===l.type,h=p?l.geometries.length:1,a=0;a<h;a++)if(u=p?l.geometries[a]:l,c=u.coordinates,m=!r||"Polygon"!==u.type&&"MultiPolygon"!==u.type?0:1,"Point"===u.type)t(c,d),d++;else if("LineString"===u.type||"MultiPoint"===u.type)for(n=0;n<c.length;n++)t(c[n],d),d++;else if("Polygon"===u.type||"MultiLineString"===u.type)for(n=0;n<c.length;n++)for(i=0;i<c[n].length-m;i++)t(c[n][i],d),d++;else if("MultiPolygon"===u.type)for(n=0;n<c.length;n++)for(i=0;i<c[n].length;i++)for(s=0;s<c[n][i].length-m;s++)t(c[n][i][s],d),d++;else{if("GeometryCollection"!==u.type)throw new Error("Unknown Geometry Type");for(n=0;n<u.geometries.length;n++)f(u.geometries[n],t,r)}}function p(e,t,r,o){var n=r;return f(e,function(e,o){n=0===o&&void 0===r?e:t(n,e,o)},o),n}function m(e,t){var r;switch(e.type){case"FeatureCollection":for(r=0;r<e.features.length;r++)t(e.features[r].properties,r);break;case"Feature":t(e.properties,0)}}function d(e,t,r){var o=r;return m(e,function(e,n){o=0===n&&void 0===r?e:t(o,e,n)}),o}function y(e,t){if("Feature"===e.type)t(e,0);else if("FeatureCollection"===e.type)for(var r=0;r<e.features.length;r++)t(e.features[r],r)}function g(e,t,r){var o=r;return y(e,function(e,n){o=0===n&&void 0===r?e:t(o,e,n)}),o}function v(e){var t=[];return f(e,function(e){t.push(e)}),t}function w(e,t){var r,o,n,i,a,s,u,h=0,c="FeatureCollection"===e.type,l="Feature"===e.type,f=c?e.features.length:1;for(r=0;r<f;r++)for(s=c?e.features[r].geometry:l?e.geometry:e,u="GeometryCollection"===s.type,a=u?s.geometries.length:1,n=0;n<a;n++)if(i=u?s.geometries[n]:s,"Point"===i.type||"LineString"===i.type||"MultiPoint"===i.type||"Polygon"===i.type||"MultiLineString"===i.type||"MultiPolygon"===i.type)t(i,h),h++;else{if("GeometryCollection"!==i.type)throw new Error("Unknown Geometry Type");for(o=0;o<i.geometries.length;o++)t(i.geometries[o],h),h++}}function _(e,t,r){var o=r;return w(e,function(e,n){o=0===n&&void 0===r?e:t(o,e,n)}),o}function x(e,t,r,o){if(void 0===e)throw new Error("geometry is required");if(t&&t.constructor!==Object)throw new Error("properties must be an Object");var n={type:"Feature",properties:t||{},geometry:e};if(r){if(4!==r.length)throw new Error("bbox must be an Array of 4 numbers");n.bbox=r}return o&&(n.id=o),n}function b(e,t,r){if(!e)throw new Error("type is required");if(!t)throw new Error("coordinates is required");if(!Array.isArray(t))throw new Error("coordinates must be an Array");var o;switch(e){case"Point":o=E(t).geometry;break;case"LineString":o=P(t).geometry;break;case"Polygon":o=M(t).geometry;break;case"MultiPoint":o=B(t).geometry;break;case"MultiLineString":o=k(t).geometry;break;case"MultiPolygon":o=L(t).geometry;break;default:throw new Error(e+" is invalid")}if(r){if(4!==r.length)throw new Error("bbox must be an Array of 4 numbers");o.bbox=r}return o}function E(e,t,r,o){if(!e)throw new Error("No coordinates passed");if(void 0===e.length)throw new Error("Coordinates must be an array");if(e.length<2)throw new Error("Coordinates must be at least 2 numbers long");if("number"!=typeof e[0]||"number"!=typeof e[1])throw new Error("Coordinates must contain numbers");return x({type:"Point",coordinates:e},t,r,o)}function M(e,t,r,o){if(!e)throw new Error("No coordinates passed");for(var n=0;n<e.length;n++){var i=e[n];if(i.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var a=0;a<i[i.length-1].length;a++)if(i[i.length-1][a]!==i[0][a])throw new Error("First and last Position are not equivalent.")}return x({type:"Polygon",coordinates:e},t,r,o)}function P(e,t,r,o){if(!e)throw new Error("No coordinates passed");if(e.length<2)throw new Error("Coordinates must be an array of two or more positions");return x({type:"LineString",coordinates:e},t,r,o)}function C(e,t){if(!e)throw new Error("No features passed");if(!Array.isArray(e))throw new Error("features must be an Array");var r={type:"FeatureCollection",features:e};return t&&(r.bbox=t),r}function k(e,t,r,o){if(!e)throw new Error("No coordinates passed");return x({type:"MultiLineString",coordinates:e},t,r,o)}function B(e,t,r,o){if(!e)throw new Error("No coordinates passed");return x({type:"MultiPoint",coordinates:e},t,r,o)}function L(e,t,r,o){if(!e)throw new Error("No coordinates passed");return x({type:"MultiPolygon",coordinates:e},t,r,o)}function G(e,t,r,o){if(!e)throw new Error("geometries is required");if(!Array.isArray(e))throw new Error("geometries must be an Array");return x({type:"GeometryCollection",geometries:e},t,r,o)}function S(e,t){if(void 0===e||null===e||isNaN(e))throw new Error("num is required");if(t&&!(t>=0))throw new Error("precision must be a positive number");var r=Math.pow(10,t||0);return Math.round(e*r)/r}function A(e,t){if(void 0===e||null===e)throw new Error("radians is required");var r=Je[t||"kilometers"];if(!r)throw new Error("units is invalid");return e*r}function X(e,t){if(void 0===e||null===e)throw new Error("distance is required");var r=Je[t||"kilometers"];if(!r)throw new Error("units is invalid");return e/r}function Y(e,t){return O(X(e,t))}function T(e){if(null===e||void 0===e)throw new Error("bearing is required");var t=e%360;return t<0&&(t+=360),t}function O(e){if(null===e||void 0===e)throw new Error("radians is required");return e%(2*Math.PI)*180/Math.PI}function N(e){if(null===e||void 0===e)throw new Error("degrees is required");return e%360*Math.PI/180}function F(e,t,r){if(null===e||void 0===e)throw new Error("distance is required");if(!(e>=0))throw new Error("distance must be a positive number");return A(X(e,t),r||"kilometers")}function q(e,t,r){if(null===e||void 0===e)throw new Error("area is required");if(!(e>=0))throw new Error("area must be a positive number");var o=Ue[t||"meters"];if(!o)throw new Error("invalid original units");var n=Ue[r||"kilometers"];if(!n)throw new Error("invalid final units");return e/o*n}function j(e,t,r,o,n){for(r=r||0,o=o||e.length-1,n=n||D;o>r;){if(o-r>600){var i=o-r+1,a=t-r+1,s=Math.log(i),u=.5*Math.exp(2*s/3),h=.5*Math.sqrt(s*u*(i-u)/i)*(a-i/2<0?-1:1);j(e,t,Math.max(r,Math.floor(t-a*u/i+h)),Math.min(o,Math.floor(t+(i-a)*u/i+h)),n)}var c=e[t],l=r,f=o;for(R(e,r,t),n(e[o],c)>0&&R(e,r,o);l<f;){for(R(e,l,f),l++,f--;n(e[l],c)<0;)l++;for(;n(e[f],c)>0;)f--}0===n(e[r],c)?R(e,r,f):(f++,R(e,f,o)),f<=t&&(r=f+1),t<=f&&(o=f-1)}}function R(e,t,r){var o=e[t];e[t]=e[r],e[r]=o}function D(e,t){return e<t?-1:e>t?1:0}function I(e,t){if(!(this instanceof I))return new I(e,t);this._maxEntries=Math.max(4,e||9),this._minEntries=Math.max(2,Math.ceil(.4*this._maxEntries)),t&&this._initFormat(t),this.clear()}function J(e,t,r){if(!r)return t.indexOf(e);for(var o=0;o<t.length;o++)if(r(e,t[o]))return o;return-1}function U(e,t){V(e,0,e.children.length,t,e)}function V(e,t,r,o,n){n||(n=re(null)),n.minX=1/0,n.minY=1/0,n.maxX=-1/0,n.maxY=-1/0;for(var i,a=t;a<r;a++)i=e.children[a],W(n,e.leaf?o(i):i);return n}function W(e,t){return e.minX=Math.min(e.minX,t.minX),e.minY=Math.min(e.minY,t.minY),e.maxX=Math.max(e.maxX,t.maxX),e.maxY=Math.max(e.maxY,t.maxY),e}function H(e,t){return e.minX-t.minX}function Z(e,t){return e.minY-t.minY}function z(e){return(e.maxX-e.minX)*(e.maxY-e.minY)}function K(e){return e.maxX-e.minX+(e.maxY-e.minY)}function Q(e,t){return(Math.max(t.maxX,e.maxX)-Math.min(t.minX,e.minX))*(Math.max(t.maxY,e.maxY)-Math.min(t.minY,e.minY))}function $(e,t){var r=Math.max(e.minX,t.minX),o=Math.max(e.minY,t.minY),n=Math.min(e.maxX,t.maxX),i=Math.min(e.maxY,t.maxY);return Math.max(0,n-r)*Math.max(0,i-o)}function ee(e,t){return e.minX<=t.minX&&e.minY<=t.minY&&t.maxX<=e.maxX&&t.maxY<=e.maxY}function te(e,t){return t.minX<=e.maxX&&t.minY<=e.maxY&&t.maxX>=e.minX&&t.maxY>=e.minY}function re(e){return{children:e,height:1,leaf:!0,minX:1/0,minY:1/0,maxX:-1/0,maxY:-1/0}}function oe(e,t,r,o,n){for(var i,a=[t,r];a.length;)r=a.pop(),t=a.pop(),r-t<=o||(i=t+Math.ceil((r-t)/o/2)*o,Ke(e,i,t,r,n),a.push(t,i,i,r))}function ne(e,t){for(var r=Object.getOwnPropertyNames(t),o=0;o<r.length;o++){var n=r[o],i=Object.getOwnPropertyDescriptor(t,n);i&&i.configurable&&void 0===e[n]&&Object.defineProperty(e,n,i)}return e}function ie(e,t){if(!(e instanceof t))throw new TypeError("Cannot call a class as a function")}function ae(e,t){if(!e)throw new ReferenceError("this hasn't been initialised - super() hasn't been called");return!t||"object"!=typeof t&&"function"!=typeof t?e:t}function se(e,t){if("function"!=typeof t&&null!==t)throw new TypeError("Super expression must either be null or a function, not "+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):ne(e,t))}var ue=r,he=o,ce=n,le=i,fe=a,pe=s,me=u,de=h,ye=c,ge={coordEach:ue,coordReduce:he,propEach:ce,propReduce:le,featureEach:fe,featureReduce:pe,coordAll:me,geomEach:de,geomReduce:ye},ve=ge.coordEach,we=function(e){var t=[1/0,1/0,-1/0,-1/0];return ve(e,function(e){t[0]>e[0]&&(t[0]=e[0]),t[1]>e[1]&&(t[1]=e[1]),t[2]<e[0]&&(t[2]=e[0]),t[3]<e[1]&&(t[3]=e[1])}),t},_e=l,xe=function(e,t){if(!e)throw new Error("No coordinates passed");if(void 0===e.length)throw new Error("Coordinates must be an array");if(e.length<2)throw new Error("Coordinates must be at least 2 numbers long");if("number"!=typeof e[0]||"number"!=typeof e[1])throw new Error("Coordinates must numbers");return l({type:"Point",coordinates:e},t)},be=function(e,t){if(!e)throw new Error("No coordinates passed");for(var r=0;r<e.length;r++){var o=e[r];if(o.length<4)throw new Error("Each LinearRing of a Polygon must have 4 or more Positions.");for(var n=0;n<o[o.length-1].length;n++)if(o[o.length-1][n]!==o[0][n])throw new Error("First and last Position are not equivalent.")}return l({type:"Polygon",coordinates:e},t)},Ee=function(e,t){if(!e)throw new Error("No coordinates passed");return l({type:"LineString",coordinates:e},t)},Me=function(e){if(!e)throw new Error("No features passed");return{type:"FeatureCollection",features:e}},Pe=function(e,t){if(!e)throw new Error("No coordinates passed");return l({type:"MultiLineString",coordinates:e},t)},Ce=function(e,t){if(!e)throw new Error("No coordinates passed");return l({type:"MultiPoint",coordinates:e},t)},ke=function(e,t){if(!e)throw new Error("No coordinates passed");return l({type:"MultiPolygon",coordinates:e},t)},Be=function(e,t){if(!e)throw new Error("No geometries passed");return l({type:"GeometryCollection",geometries:e},t)},Le={miles:3960,nauticalmiles:3441.145,degrees:57.2957795,radians:1,inches:250905600,yards:6969600,meters:6373e3,metres:6373e3,kilometers:6373,kilometres:6373,feet:20908792.65},Ge=function(e,t){var r=Le[t||"kilometers"];if(void 0===r)throw new Error("Invalid unit");return e*r},Se=function(e,t){var r=Le[t||"kilometers"];if(void 0===r)throw new Error("Invalid unit");return e/r},Ae=function(e,t){var r=Le[t||"kilometers"];if(void 0===r)throw new Error("Invalid unit");return e/r*57.2958},Xe={feature:_e,point:xe,polygon:be,lineString:Ee,featureCollection:Me,multiLineString:Pe,multiPoint:Ce,multiPolygon:ke,geometryCollection:Be,radiansToDistance:Ge,distanceToRadians:Se,distanceToDegrees:Ae},Ye=f,Te=p,Oe=m,Ne=d,Fe=y,qe=g,je=v,Re=w,De=_,Ie={coordEach:Ye,coordReduce:Te,propEach:Oe,propReduce:Ne,featureEach:Fe,featureReduce:qe,coordAll:je,geomEach:Re,geomReduce:De},Je={miles:3960,nauticalmiles:3441.145,degrees:57.2957795,radians:1,inches:250905600,yards:6969600,meters:6373e3,metres:6373e3,centimeters:6373e5,centimetres:6373e5,kilometers:6373,kilometres:6373,feet:20908792.65},Ue={kilometers:1e-6,kilometres:1e-6,meters:1,metres:1,centimetres:1e4,millimeter:1e6,acres:247105e-9,miles:3.86e-7,yards:1.195990046,feet:10.763910417,inches:1550.003100006},Ve={feature:x,geometry:b,featureCollection:C,geometryCollection:G,point:E,multiPoint:B,lineString:P,multiLineString:k,polygon:M,multiPolygon:L,radiansToDistance:A,distanceToRadians:X,distanceToDegrees:Y,radians2degrees:O,degrees2radians:N,bearingToAngle:T,convertDistance:F,convertArea:q,round:S},We=Ve.polygon,He=function(e){var t=[e[0],e[1]],r=[e[0],e[3]],o=[e[2],e[3]],n=[e[2],e[1]];return We([[t,n,o,r,t]])},Ze=j,ze=I,Ke=Ze;I.prototype={all:function(){return this._all(this.data,[])},search:function(e){var t=this.data,r=[],o=this.toBBox;if(!te(e,t))return r;for(var n,i,a,s,u=[];t;){for(n=0,i=t.children.length;n<i;n++)a=t.children[n],s=t.leaf?o(a):a,te(e,s)&&(t.leaf?r.push(a):ee(e,s)?this._all(a,r):u.push(a));t=u.pop()}return r},collides:function(e){var t=this.data,r=this.toBBox;if(!te(e,t))return!1;for(var o,n,i,a,s=[];t;){for(o=0,n=t.children.length;o<n;o++)if(i=t.children[o],a=t.leaf?r(i):i,te(e,a)){if(t.leaf||ee(e,a))return!0;s.push(i)}t=s.pop()}return!1},load:function(e){if(!e||!e.length)return this;if(e.length<this._minEntries){for(var t=0,r=e.length;t<r;t++)this.insert(e[t]);return this}var o=this._build(e.slice(),0,e.length-1,0);if(this.data.children.length)if(this.data.height===o.height)this._splitRoot(this.data,o);else{if(this.data.height<o.height){var n=this.data;this.data=o,o=n}this._insert(o,this.data.height-o.height-1,!0)}else this.data=o;return this},insert:function(e){return e&&this._insert(e,this.data.height-1),this},clear:function(){return this.data=re([]),this},remove:function(e,t){if(!e)return this;for(var r,o,n,i,a=this.data,s=this.toBBox(e),u=[],h=[];a||u.length;){if(a||(a=u.pop(),o=u[u.length-1],r=h.pop(),i=!0),a.leaf&&-1!==(n=J(e,a.children,t)))return a.children.splice(n,1),u.push(a),this._condense(u),this;i||a.leaf||!ee(a,s)?o?(r++,a=o.children[r],i=!1):a=null:(u.push(a),h.push(r),r=0,o=a,a=a.children[0])}return this},toBBox:function(e){return e},compareMinX:H,compareMinY:Z,toJSON:function(){return this.data},fromJSON:function(e){return this.data=e,this},_all:function(e,t){for(var r=[];e;)e.leaf?t.push.apply(t,e.children):r.push.apply(r,e.children),e=r.pop();return t},_build:function(e,t,r,o){var n,i=r-t+1,a=this._maxEntries;if(i<=a)return n=re(e.slice(t,r+1)),U(n,this.toBBox),n;o||(o=Math.ceil(Math.log(i)/Math.log(a)),a=Math.ceil(i/Math.pow(a,o-1))),n=re([]),n.leaf=!1,n.height=o;var s,u,h,c,l=Math.ceil(i/a),f=l*Math.ceil(Math.sqrt(a));for(oe(e,t,r,f,this.compareMinX),s=t;s<=r;s+=f)for(h=Math.min(s+f-1,r),oe(e,s,h,l,this.compareMinY),u=s;u<=h;u+=l)c=Math.min(u+l-1,h),n.children.push(this._build(e,u,c,o-1));return U(n,this.toBBox),n},_chooseSubtree:function(e,t,r,o){for(var n,i,a,s,u,h,c,l;;){if(o.push(t),t.leaf||o.length-1===r)break;for(c=l=1/0,n=0,i=t.children.length;n<i;n++)a=t.children[n],u=z(a),h=Q(e,a)-u,h<l?(l=h,c=u<c?u:c,s=a):h===l&&u<c&&(c=u,s=a);t=s||t.children[0]}return t},_insert:function(e,t,r){var o=this.toBBox,n=r?e:o(e),i=[],a=this._chooseSubtree(n,this.data,t,i);for(a.children.push(e),W(a,n);t>=0&&i[t].children.length>this._maxEntries;)this._split(i,t),t--;this._adjustParentBBoxes(n,i,t)},_split:function(e,t){var r=e[t],o=r.children.length,n=this._minEntries;this._chooseSplitAxis(r,n,o);var i=this._chooseSplitIndex(r,n,o),a=re(r.children.splice(i,r.children.length-i));a.height=r.height,a.leaf=r.leaf,U(r,this.toBBox),U(a,this.toBBox),t?e[t-1].children.push(a):this._splitRoot(r,a)},_splitRoot:function(e,t){this.data=re([e,t]),this.data.height=e.height+1,this.data.leaf=!1,U(this.data,this.toBBox)},_chooseSplitIndex:function(e,t,r){var o,n,i,a,s,u,h,c;for(u=h=1/0,o=t;o<=r-t;o++)n=V(e,0,o,this.toBBox),i=V(e,o,r,this.toBBox),a=$(n,i),s=z(n)+z(i),a<u?(u=a,c=o,h=s<h?s:h):a===u&&s<h&&(h=s,c=o);return c},_chooseSplitAxis:function(e,t,r){var o=e.leaf?this.compareMinX:H,n=e.leaf?this.compareMinY:Z;this._allDistMargin(e,t,r,o)<this._allDistMargin(e,t,r,n)&&e.children.sort(o)},_allDistMargin:function(e,t,r,o){e.children.sort(o);var n,i,a=this.toBBox,s=V(e,0,t,a),u=V(e,r-t,r,a),h=K(s)+K(u);for(n=t;n<r-t;n++)i=e.children[n],W(s,e.leaf?a(i):i),h+=K(s);for(n=r-t-1;n>=t;n--)i=e.children[n],W(u,e.leaf?a(i):i),h+=K(u);return h},_adjustParentBBoxes:function(e,t,r){for(var o=r;o>=0;o--)W(t[o],e)},_condense:function(e){for(var t,r=e.length-1;r>=0;r--)0===e[r].children.length?r>0?(t=e[r-1].children,t.splice(t.indexOf(e[r]),1)):this.clear():U(e[r],this.toBBox)},_initFormat:function(e){var t=["return a"," - b",";"];this.compareMinX=new Function("a","b",t.join(e[0])),this.compareMinY=new Function("a","b",t.join(e[1])),this.toBBox=new Function("a","return {minX: a"+e[0]+", minY: a"+e[1]+", maxX: a"+e[2]+", maxY: a"+e[3]+"};")}};var Qe=we,$e=Xe.featureCollection,et=Ie.featureEach,tt=He,rt=ze,ot=function(e){var t=rt(e);return t.insert=function(e){if(Array.isArray(e)){var t=e;e=tt(t),e.bbox=t}else e.bbox=e.bbox?e.bbox:Qe(e);return rt.prototype.insert.call(this,e)},t.load=function(e){var t=[];return Array.isArray(e)?e.forEach(function(e){var r=tt(e);r.bbox=e,t.push(r)}):et(e,function(e){e.bbox=e.bbox?e.bbox:Qe(e),t.push(e)}),rt.prototype.load.call(this,t)},t.remove=function(e){if(Array.isArray(e)){var t=e;e=tt(t),e.bbox=t}return rt.prototype.remove.call(this,e)},t.clear=function(){return rt.prototype.clear.call(this)},t.search=function(e){var t=rt.prototype.search.call(this,this.toBBox(e));return $e(t)},t.collides=function(e){return rt.prototype.collides.call(this,this.toBBox(e))},t.all=function(){var e=rt.prototype.all.call(this);return $e(e)},t.toJSON=function(){return rt.prototype.toJSON.call(this)},t.fromJSON=function(e){return rt.prototype.fromJSON.call(this,e)},t.toBBox=function(e){var t;return t=e.bbox?e.bbox:Array.isArray(e)&&4===e.length?e:Qe(e),{minX:t[0],minY:t[1],maxX:t[2],maxY:t[3]}},t},nt={mode:"line",tolerance:10,symbol:{markerType:"ellipse",markerFill:"#0f89f5",markerLineColor:"#fff",markerLineWidth:2,markerLineOpacity:1,markerWidth:15,markerHeight:15},anchor:!0},it=function(e){function r(t){ie(this,r);var o=ae(this,e.call(this,t));return o.tree=ot(),o}return se(r,e),r.prototype.getMode=function(){if(this._mode=this._mode?this._mode:this.options.mode,this._checkMode(this._mode))return this._mode;throw new Error("snap mode is invalid")},r.prototype.setMode=function(e){if(!this._checkMode(this._mode))throw new Error("snap mode is invalid");this._mode=e},r.prototype.addTo=function(e){var r=t.INTERNAL_LAYER_PREFIX+"_snapto";this._mousemoveLayer=new t.VectorLayer(r).addTo(e),this._map=e,this.allGeometries=[],this.enable()},r.prototype.remove=function(){this.disable(),this._mousemoveLayer&&(this._mousemoveLayer.remove(),delete this._mousemoveLayer)},r.prototype.getMap=function(){return this._map},r.prototype._checkMode=function(e){return"point"===e||"line"===e},r.prototype.enable=function(){var e=this.getMap();if(!this.allGeometries)throw new Error("you should set geometries which are snapped to firstly!");this._mousemove||this._registerEvents(e),this._mousemoveLayer&&this._mousemoveLayer.show()},r.prototype.disable=function(){this.getMap().off("mousemove",this._mousemove),this._mousemoveLayer&&this._mousemoveLayer.hide(),delete this._mousemove},r.prototype.setGeometries=function(e){e=e instanceof Array?e:[e],this.allGeometries=this._compositGeometries(e)},r.prototype.setLayer=function(e){if(e instanceof t.VectorLayer){var r=e.getGeometries();this.allGeometries=this._compositGeometries(r),e.on("addgeo",function(e){this._addGeometries(e.geometries)},this),e.on("clear",function(){this._clearGeometries()},this),this._mousemoveLayer.bringToFront()}},r.prototype.bindDrawTool=function(e){var r=this;e instanceof t.DrawTool&&(e.on("drawstart",function(e){r.snapPoint&&(r._resetCoordinates(e.target._geometry,r.snapPoint),r._resetClickPoint(e.target._clickCoords,r.snapPoint))},this),e.on("mousemove",function(e){r.snapPoint&&r._resetCoordinates(e.target._geometry,r.snapPoint)},this),e.on("drawvertex",function(e){r.snapPoint&&(r._resetCoordinates(e.target._geometry,r.snapPoint),r._resetClickPoint(e.target._clickCoords,r.snapPoint))},this),e.on("drawend",function(e){if(r.snapPoint){var t=e.geometry;r._resetCoordinates(t,r.snapPoint)}},this))},r.prototype._resetCoordinates=function(e,r){var o=e.getCoordinates();return o instanceof Array?(o[o.length-1].x=r.x,o[o.length-1].y=r.y):o instanceof t.Coordinate&&(o.x=r.x,o.y=r.y),e.setCoordinates(o),e},r.prototype._resetClickPoint=function(e,t){var r=e;r[r.length-1].x=t.x,r[r.length-1].y=t.y},r.prototype._addGeometries=function(e){e=e instanceof Array?e:[e];var t=this._compositGeometries(e);this.allGeometries=this.allGeometries.concat(t)},r.prototype._clearGeometries=function(){this.addGeometries=[]},r.prototype._prepareGeometries=function(e){if(this.allGeometries){var t=this.allGeometries;this.tree.clear(),this.tree.load({type:"FeatureCollection",features:t}),this.inspectExtent=this._createInspectExtent(e);return this.tree.search(this.inspectExtent)}return null},r.prototype._compositGeometries=function(e){var t=[],r=this.getMode();return"point"===r?t=this._compositToPoints(e):"line"===r&&(t=this._compositToLines(e)),t},r.prototype._compositToPoints=function(e){var t=[];return e.forEach(function(e){t=t.concat(this._parserToPoints(e))}.bind(this)),t},r.prototype._createMarkers=function(e){var r=[];return e.forEach(function(e){var o=new t.Marker(e,{properties:{}});o=o.toGeoJSON(),r.push(o)}),r},r.prototype._parserToPoints=function(e){var t=e.getCoordinates(),r=[];if(t[0]instanceof Array)t.forEach(function(e){var t=this._createMarkers(e);r=r.concat(t)}.bind(this));else{t instanceof Array||(t=[t]);var o=this._createMarkers(t);r=r.concat(o)}return r},r.prototype._compositToLines=function(e){var t=[];return e.forEach(function(e){switch(e.getType()){case"Point":var r=e.toGeoJSON();r.properties={},t.push(r);break;case"LineString":case"Polygon":t=t.concat(this._parserGeometries(e,1))}}.bind(this)),t},r.prototype._parserGeometries=function(e,t){var r=e.getCoordinates(),o=[];if(r[0]instanceof Array)r.forEach(function(r){var n=this._createLine(r,t,e);o=o.concat(n)}.bind(this));else{var n=this._createLine(r,t,e);o=o.concat(n)}return o},r.prototype._createLine=function(e,r,o){for(var n=[],i=e.length-r,a=0;a<i;a++){var s=new t.LineString([e[a],e[a+1]],{properties:{obj:o}});n.push(s.toGeoJSON())}return n},r.prototype._createInspectExtent=function(e){var r=this.options.tolerance?this.options.tolerance:10,o=this.getMap(),n=o.getZoom(),i=o.coordinateToPoint(e,n),a=o.pointToCoordinate(new t.Point([i.x-r,i.y-r]),n),s=o.pointToCoordinate(new t.Point([i.x+r,i.y-r]),n),u=o.pointToCoordinate(new t.Point([i.x-r,i.y+r]),n),h=o.pointToCoordinate(new t.Point([i.x+r,i.y+r]),n);return{type:"Feature",properties:{},geometry:{type:"Polygon",coordinates:[[[a.x,a.y],[s.x,s.y],[h.x,h.y],[u.x,u.y]]]}}},r.prototype._registerEvents=function(e){this._mousemove=function(e){this.mousePoint=e.coordinate,this._marker?this._marker.setCoordinates(e.coordinate):this._marker=new t.Marker(e.coordinate,{symbol:this.options.symbol}).addTo(this._mousemoveLayer);var r=this._findGeometry(e.coordinate);r.features.length>0?(this.snapPoint=this._getSnapPoint(r),this.snapPoint&&this._marker.setCoordinates([this.snapPoint.x,this.snapPoint.y])):this.snapPoint=null},e.on("mousemove",this._mousemove,this)},r.prototype._setDistance=function(e){for(var t=[],r=0;r<e.length;r++){var o=e[r];if("LineString"===o.geometry.type){var n=this._distToPolyline(this.mousePoint,o);t.push({geoObject:o,distance:n})}else if("Point"===o.geometry.type){var i=this._distToPoint(this.mousePoint,o);t.push({geoObject:o,distance:i})}}return t},r.prototype._findNearestGeometries=function(e){var t=this._setDistance(e);return t=t.sort(this._compare(t,"distance")),t[0]},r.prototype._findGeometry=function(e){return this._prepareGeometries(e)},r.prototype._getSnapPoint=function(e){var t=this._findNearestGeometries(e.features),r=null;if(!this._validDistance(t.distance))return null;if("Point"===t.geoObject.geometry.type)r={x:t.geoObject.geometry.coordinates[0],y:t.geoObject.geometry.coordinates[1]};else if("LineString"===t.geoObject.geometry.type){var o=this._setEquation(t.geoObject);if(0===o.A)r={x:this.mousePoint.x,y:t.geoObject.geometry.coordinates[0][1]};else if(o.A===1/0)r={x:t.geoObject.geometry.coordinates[0][0],y:this.mousePoint.y};else{var n=o.B/o.A,i=this._setVertiEquation(n,this.mousePoint);r=this._solveEquation(o,i)}}return r},r.prototype._distToPolyline=function(e,t){var r=this._setEquation(t),o=r.A,n=r.B,i=r.C;return Math.abs((o*e.x+n*e.y+i)/Math.sqrt(Math.pow(o,2)+Math.pow(n,2)))},r.prototype._validDistance=function(e){return!(e/this.getMap().getResolution()>this.options.tolerance)},r.prototype._distToPoint=function(e,t){var r=[e.x,e.y],o=t.geometry.coordinates;return Math.sqrt(Math.pow(r[0]-o[0],2)+Math.pow(r[1]-o[1],2))},r.prototype._setEquation=function(e){var t=e.geometry.coordinates,r=t[0],o=t[1],n=Number((r[1]-o[1])/(r[0]-o[0]).toString());return{A:n,B:-1,C:r[1]-n*r[0]}},r.prototype._setVertiEquation=function(e,t){return{A:e,B:-1,C:t.y-e*t.x}},r.prototype._solveEquation=function(e,t){var r=e.A,o=e.B,n=e.C,i=t.A,a=t.B,s=t.C;return{x:(o*s-n*a)/(r*a-i*o),y:(r*s-i*n)/(o*i-a*r)}},r.prototype._compare=function(e,t){return function(e,r){var o=e[t],n=r[t];return n<o?1:n>o?-1:0}},r}(t.Class);it.mergeOptions(nt),e.SnapTool=it,Object.defineProperty(e,"__esModule",{value:!0}),"undefined"!=typeof console&&console.log("maptalks.snapto v0.1.4, requires maptalks@^0.16.0.")});